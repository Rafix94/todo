{{- define "common.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: {{ .Values.deployment.label }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.deployment.label }}
    spec:
      containers:
        - name: {{ .Values.deployment.label }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          ports:
            - containerPort: {{ .Values.deployment.containerPort }}
              protocol: TCP
          env:
            - name: SERVER_PORT
              value: "{{ .Values.deployment.containerPort }}"  # Ensure this is quoted
            - name: SPRING_APPLICATION_NAME
              value: "{{ .Values.deployment.name }}"  # Ensure this is quoted
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPRING_PROFILES_ACTIVE
            {{- if .Values.deployment.configEnabled }}
            - name: SPRING_CONFIG_IMPORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPRING_CONFIG_IMPORT
            {{- end }}
            {{- if .Values.deployment.discoveryEnabled }}
            - name: SPRING_CLOUD_KUBERNETES_DISCOVERY_DISCOVERY_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPRING_CLOUD_KUBERNETES_DISCOVERY_DISCOVERY_SERVER_URL
            {{- end }}

            {{- if .Values.deployment.spacesEnabled }}
            - name: SPACES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPACES_ENDPOINT
            - name: SPACES_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPACES_ACCESS_KEY
            - name: SPACES_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.name }}
                  key: SPACES_BUCKET_NAME
            - name: SPACES_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secretName }}
                  key: spaces_secret_key
            {{- end }}

            {{- if .Values.deployment.dbEnabled }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secretName }}
                  key: db_password
            {{- end }}
            {{- if .Values.deployment.keycloakClientEnabled }}
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.deployment.secretName }}
                  key: keycloak_client_secret
            {{- end }}
            {{- if .Values.deployment.kafkaClientEnabled }}
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-user-passwords
                  key: client-passwords
            - name: KAFKA_USERNAME
              value: user1
            {{- end }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.deployment.containerPort }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.deployment.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu | quote }}
              memory: {{ .Values.deployment.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu | quote }}
              memory: {{ .Values.deployment.resources.limits.memory | quote }}
  {{- end }}
