services:
  configserver:
    container_name: configserver
    image: todo/configserver:v1
    ports:
      - 8090:8090
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 15s
    networks:
      - todo
    deploy:
      resources:
        limits:
          memory: 700m

  eureka:
    container_name: eureka
    image: todo/eureka:v1
    ports:
      - 8091:8091
    healthcheck:
      test: "curl --fail --silent localhost:8091/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 15s
    networks:
      - todo
    deploy:
      resources:
        limits:
          memory: 700m
    depends_on:
      configserver:
        condition: service_healthy
  postgres:
    container_name: postgres
    image: postgres:16.2
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: useragent_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3

  useragent:
    container_name: useragent
    image: todo/useragent:v1
    ports:
      - 8092:8092
    healthcheck:
      test: "curl --fail --silent localhost:8092/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 15s
    networks:
      - todo
    deploy:
      resources:
        limits:
          memory: 700m
    depends_on:
      configserver:
        condition: service_healthy
      eureka:
        condition: service_healthy
      postgres:
        condition: service_healthy
  edgeserver:
    container_name: edgeserver
    image: todo/edgeserver:v1
    ports:
      - 8093:8093
    healthcheck:
      test: "curl --fail --silent localhost:8093/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 10s
      retries: 15
      start_period: 15s
    networks:
      - todo
    deploy:
      resources:
        limits:
          memory: 700m
    depends_on:
      useragent:
        condition: service_healthy
  ui:
    container_name: ui
    image: todo/ui:v1
    ports:
      - 4200:4200
    restart: always

#  keycloak:
#    image: jboss/keycloak:15.0.2
#    container_name: keycloak
#    environment:
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#      - DB_VENDOR=POSTGRES
#      - DB_ADDR=keycloak-db
#      - DB_DATABASE=keycloak
#      - DB_USER=keycloak
#      - DB_PASSWORD=password
#    ports:
#      - "8080:8080"
#    depends_on:
#      - keycloak-db
#
#  keycloak-db:
#    image: postgres:16.2
#    container_name: keycloak-db
#    environment:
#      - POSTGRES_DB=keycloak
#      - POSTGRES_USER=keycloak
#      - POSTGRES_PASSWORD=password
#    ports:
#      - "5433:5432"
volumes:
  postgres_data:
networks:
  todo:
    driver: "bridge"